{"version":3,"names":["PasswordStrength","BaseComponent","constructor","node","options","super","this","_options","container","_container","$","findOne","closest","_node","_render","_refresh","_events","dispose","remove","_progress","removeEvent","_progressBar","getStrength","value","getValue","findSequences","string","locations","sequences","sequence","i","length","current","next","distance","char","nextChar","charDistance","charCodeAt","push","defaults","levels","score","class","text","striped","classes","progress","progressBar","progressBarStriped","password","match","substring","upper","lower","numbers","symbols","dictionary","code","list","filter","v","repeats","Object","values","reduce","acc","count","matches","matchAll","Math","min","lowerPassword","toLowerCase","letterSequences","concat","numberSequences","_clamp","proto","prototype","addEvent","_","strength","nextLevel","level","setStyle","width","setAttribute","addClass","setText","create","attributes","role","append","initComponent"],"sources":["../src/password-strength.js","../src/static/helpers.js","../src/index.js","../src/prototype/events.js","../src/prototype/helpers.js","../src/prototype/render.js"],"sourcesContent":["import $ from '@fr0st/query';\nimport { BaseComponent } from '@fr0st/ui';\n\n/**\n * PasswordStrength Class\n * @class\n */\nexport default class PasswordStrength extends BaseComponent {\n    /**\n     * New PasswordStrength constructor.\n     * @param {HTMLElement} node The input node.\n     * @param {object} [options] The options to create the PasswordStrength with.\n     */\n    constructor(node, options) {\n        super(node, options);\n\n        if (this._options.container) {\n            this._container = $.findOne(this._options.container);\n        } else {\n            this._container = $.closest(this._node, ':not(.form-input):not(.input-group)');\n        }\n\n        this._render();\n        this._refresh();\n        this._events();\n    }\n\n    /**\n     * Dispose the PasswordStrength.\n     */\n    dispose() {\n        $.remove(this._progress);\n        $.removeEvent(this._node, 'input.ui.passwordstrength');\n\n        this._container = null;\n        this._progress = null;\n        this._progressBar = null;\n\n        super.dispose();\n    }\n\n    /**\n     * Get the password strength.\n     * @return {number} The password strength. (0, 100)\n     */\n    getStrength() {\n        const value = $.getValue(this._node);\n\n        return this.constructor.getStrength(value);\n    }\n}\n","import $ from '@fr0st/query';\n\n/**\n * Find character sequences in a string.\n * @param {string} string The input string.\n * @param {array} locations The character locations.\n * @return {array} The character sequences.\n */\nfunction findSequences(string, locations) {\n    const sequences = [];\n    let sequence = [];\n\n    for (let i = 0; i < locations.length - 1; i++) {\n        const current = locations[i];\n        const next = locations[i + 1];\n        const distance = next - current;\n\n        const char = string[current];\n        const nextChar = string[next];\n        const charDistance = nextChar.charCodeAt(0) - char.charCodeAt(0);\n\n        if (distance === 1 && charDistance === 1) {\n            if (!sequence.length) {\n                sequence.push(char);\n            }\n            sequence.push(nextChar);\n        } else if (sequence.length) {\n            sequences.push(sequence);\n            sequence = [];\n        }\n    }\n\n    if (sequence.length) {\n        sequences.push(sequence);\n    }\n\n    return sequences;\n};\n\n/**\n * Get the strength of a password.\n * @param {string} password The password.\n * @return {number} The password strength.\n */\nexport function getStrength(password) {\n    if (password.match(/^password/i)) {\n        password = password.substring(8);\n    }\n\n    const length = password.length;\n\n    let score = 0;\n\n    if (length) {\n        score += length * 6;\n    }\n\n    const upper = [];\n    const lower = [];\n    const numbers = [];\n    const symbols = [];\n    const dictionary = {};\n\n    for (let i = 0; i < length; i++) {\n        const char = password[i];\n        const code = char.charCodeAt(0);\n\n        if (code >= 48 && code <= 57) {\n            numbers.push(i);\n        } else if (code >= 65 && code <= 90) {\n            upper.push(i);\n        } else if (code >= 97 && code <= 122) {\n            lower.push(i);\n        } else {\n            symbols.push(i);\n        }\n\n        if (!(char in dictionary)) {\n            dictionary[char] = 0;\n        }\n\n        dictionary[char]++;\n    }\n\n    // reward upper/lower case\n    if (upper.length !== length && lower.length !== length) {\n        if (upper.length) {\n            score += length - upper.length;\n        }\n\n        if (lower.length) {\n            score += length - lower.length;\n        }\n    }\n\n    // reward numbers\n    if (numbers.length !== length) {\n        score += numbers.length * 3;\n    }\n\n    // reward symbols\n    score += symbols.length * 6;\n\n    // reward inner numbers/symbols\n    for (const list of [numbers, symbols]) {\n        const reward = list.filter((v) => v && v !== length - 1).length;\n        score += reward * 3;\n    }\n\n    // punish only letters\n    if (!numbers.length && !symbols.length) {\n        score -= length;\n    }\n\n    // punish only numbers\n    if (!upper.length && !lower.length && !symbols.length) {\n        score -= length;\n    }\n\n    // punish no symbols\n    if (!symbols.length) {\n        score -= length;\n    }\n\n    // repeating characters\n    const repeats = Object.values(dictionary)\n        .reduce((acc, count) => acc + count - 1, 0);\n\n    if (repeats > 0) {\n        score -= repeats;\n    }\n\n    if (length >= 2) {\n        // consecutive characters\n        const matches = password.matchAll(/(.)\\1+/g);\n\n        for (const match of matches) {\n            score -= Math.min(match[0].length, 12) * 3;\n        }\n\n        const lowerPassword = password.toLowerCase();\n\n        // sequential letters\n        const letters = upper.concat(lower);\n        const letterSequences = findSequences(lowerPassword, letters);\n        for (const sequence of letterSequences) {\n            if (sequence.length > 2) {\n                score -= (Math.min(sequence.length - 2, 16)) * 3;\n            }\n        }\n\n        // sequential numbers\n        const numberSequences = findSequences(lowerPassword, numbers);\n        for (const sequence of numberSequences) {\n            if (sequence.length > 2) {\n                score -= (Math.min(sequence.length - 2, 16)) * 3;\n            }\n        }\n    }\n\n    return $._clamp(score, 0, 100);\n};\n","import { initComponent } from '@fr0st/ui';\nimport PasswordStrength from './password-strength.js';\nimport { _events } from './prototype/events.js';\nimport { _refresh } from './prototype/helpers.js';\nimport { _render } from './prototype/render.js';\nimport { getStrength } from './static/helpers.js';\n\n// PasswordStrength default options\nPasswordStrength.defaults = {\n    levels: [\n        {\n            score: 0,\n            class: 'text-bg-danger',\n            text: 'Very Weak',\n        },\n        {\n            score: 20,\n            class: 'text-bg-danger',\n            text: 'Weak',\n        },\n        {\n            score: 40,\n            class: 'text-bg-warning',\n            text: 'Normal',\n        },\n        {\n            score: 60,\n            class: 'text-bg-success',\n            text: 'Strong',\n        },\n        {\n            score: 80,\n            class: 'text-bg-success',\n            text: 'Very Strong',\n        },\n    ],\n    container: null,\n    striped: false,\n};\n\n// PasswordStrength classes\nPasswordStrength.classes = {\n    progress: 'progress mt-2',\n    progressBar: 'progress-bar',\n    progressBarStriped: 'progress-bar-striped',\n};\n\n// PasswordStrength static\nPasswordStrength.getStrength = getStrength;\n\n// PasswordStrength prototype\nconst proto = PasswordStrength.prototype;\n\nproto._events = _events;\nproto._refresh = _refresh;\nproto._render = _render;\n\n// PasswordStrength init\ninitComponent('passwordstrength', PasswordStrength);\n\nexport default PasswordStrength;\n","import $ from '@fr0st/query';\n\n/**\n * Attach events for the PasswordStrength.\n */\nexport function _events() {\n    $.addEvent(this._node, 'input.ui.passwordstrength', (_) => {\n        this._refresh();\n    });\n};\n","import $ from '@fr0st/query';\n\n/**\n * Refresh the password strength.\n */\nexport function _refresh() {\n    const strength = this.getStrength();\n\n    let nextLevel;\n    for (const level of this._options.levels) {\n        if (strength < level.score) {\n            break;\n        }\n\n        nextLevel = level;\n    }\n\n    $.setStyle(this._progressBar, { width: `${strength}%` });\n    $.setAttribute(this._progressBar, {\n        'class': this.constructor.classes.progressBar,\n        'aria-valuenow': strength,\n    });\n\n    $.addClass(this._progressBar, nextLevel.class);\n\n    if (this._options.striped) {\n        $.addClass(this._progressBar, this.constructor.classes.progressBarStriped);\n    }\n\n    if (nextLevel.text) {\n        $.setText(this._progressBar, nextLevel.text);\n    }\n};\n","import $ from '@fr0st/query';\n\n/**\n * Render the password strength element.\n */\nexport function _render() {\n    this._progress = $.create('div', {\n        class: this.constructor.classes.progress,\n    });\n\n    this._progressBar = $.create('div', {\n        attributes: {\n            'role': 'progressbar',\n            'aria-valuemin': 0,\n            'aria-valuemax': 100,\n        },\n    });\n\n    $.append(this._progress, this._progressBar);\n    $.append(this._container, this._progress);\n};\n"],"mappings":"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"}